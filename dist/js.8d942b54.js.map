{"version":3,"sources":["js/framework/ComponentFactory.js","js/utils/parser.js","js/framework/Component.js","js/Services/WeatherDataService.js","js/Services/AppState.js","js/Components/SearchBar/SearchBar.js","js/Components/SearchBar/index.js","js/utils/icons.js","js/Components/CurrentWeather/CurrentWeather.js","js/Components/CurrentWeather/index.js","js/Components/WeatherForecast/WeatherForecast.js","js/Components/WeatherForecast/index.js","js/Components/WeatherForecastItem/WeatherForecastItem.js","js/Components/WeatherForecastItem/index.js","js/Components/App/App.js","js/Components/App/index.js","js/index.js"],"names":["ComponentFactory","mappings","register","componentClass","name","get","componentClassName","console","log","parseJsx","string","template","document","createElement","componentCount","idBase","Date","getTime","componentMap","trim","replace","match","p1","p2","offset","id","parsingResults","props","length","paramsRegex","exec","objectPropertyName","split","filter","segment","join","innerHTML","eventTypes","elementsWithListeners","content","querySelectorAll","map","eventType","forEach","element","hasAttribute","handlerName","getAttribute","addEventListener","bind","Object","keys","host","querySelector","cls","parentNode","insertAdjacentHTML","replaceWith","clearDomChildren","domElement","appendDomFragment","domFragment","Array","isArray","append","createDomFragment","buildDomFragment","elements","elementSpec","tag","classList","add","children","appendChild","Component","init","_render","stateDelta","state","assign","rendered","render","_createDomFragment","createDocumentFragment","componentNameRegex","parsingComponentResults","parsingParamsResults","propsName","propsValue","eventTag","WeatherDataService","geocoderBase","forecastBase","currentLocationBase","geocoderKey","forecastKey","corsAnywhere","forecastData","city","latitude","longitude","subscribers","getForwardGeocoding","getData","then","response","getWeatherForecast","results","geometry","lat","lng","subscriber","push","api","fetch","ok","Error","statusText","json","AppState","watchers","entity","watcher","newValue","SearchBar","watch","updateMyself","subState","updateState","e","preventDefault","target","value","setCity","imageUrl","fog","rain","snow","wind","sleet","cloudy","clearDay","clearNight","partlyCloudyDay","partlyCloudyNight","animatedImageUrl","animatedFog","animatedRain","animatedSnow","animatedWind","animatedSleet","animatedCloudy","animatedClearDay","animatedClearNight","animatedPartlyCloudyDay","animatedPartlyCloudyNight","CurrentWeather","onServerResponse","subscribeForCurrentWeather","temperature","icon","windSpeed","humidity","date","getCurrentLocation","weatherData","currently","units","flags","time","toLocaleDateString","month","day","Math","round","WeatherForecast","data","temperatureHigh","temperatureLow","daily","slice","weekday","WeatherForecastItem","App","inputValue","hasError","todayForecast","weekForecast","getGeolocation","getCityForecast","getElementById"],"mappings":"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","file":"js.8d942b54.js","sourceRoot":"../src","sourcesContent":["const ComponentFactory = {\n  mappings: {},\n  register: componentClass => ComponentFactory.mappings[componentClass.name] = componentClass,\n  get: componentClassName => ComponentFactory.mappings[componentClassName],\n};\nexport default ComponentFactory;\nconsole.log(ComponentFactory);\n/*\n Every component will need:\n  1) import ComponentFactory from \"../framework/ComponentFactory\";\n  2) ComponentFactory.register(ComponentClass); // to register component class with factory\n */\n","import ComponentFactory from '../framework/ComponentFactory';\n\nexport const parseJsx = string => {\n  const template = document.createElement('template');\n  let componentCount = 0;\n  const idBase = new Date().getTime();\n  const componentMap = {};\n\n  string = string.trim().replace(/<([A-Z][A-Za-z]*)(.*)\\/>/g, (match, p1, p2, offset) => {\n    const id = `z${  idBase  }${componentCount++}`;\n\n    // extract props\n    const props = {};\n    let parsingResults;\n    p2 = p2.trim();\n    if (p2.length) {\n      const paramsRegex = /(\\S+)=[\"']?((?:(?!\\/>|>|\"|'|\\s).)+)/g;\n      while ((parsingResults = paramsRegex.exec(p2)) !== null) {\n        const objectPropertyName = parsingResults[2].match(/{(.*)}/);\n        console.log('parce', objectPropertyName);\n        props[parsingResults[1]] = objectPropertyName ?\n          this[objectPropertyName[1].split('.').filter(segment => segment !== 'this').join('.')] :\n          parsingResults[2];\n      }\n    }\n\n    componentMap[id] = {\n      name: p1,\n      props,\n    };\n    return `<div id=\"${id}\"></div>`;\n  });\n  template.innerHTML = string;\n\n  // manage event handlers\n  const eventTypes = ['click', 'Submit'];\n  const elementsWithListeners = template.content.querySelectorAll([eventTypes].map(eventType => `on-${  eventType}`));\n  console.log('elementsWithListeners', elementsWithListeners);\n  elementsWithListeners.forEach(element => {\n    eventTypes.forEach(eventType => {\n      if (element.hasAttribute(`on-${  eventType}`)) {\n        let handlerName = element.getAttribute(`on-${  eventType}`).match(/{(.*)}/)[1];\n        handlerName = handlerName.split('.').filter(segment => segment !== 'this').join('.');\n        element.addEventListener(eventType, this[handlerName].bind(this));\n      }\n    });\n  });\n\n  // render mapped components\n  Object.keys(componentMap).forEach(id => {\n    const host = template.content.querySelector(`#${  id}`);\n    const cls = ComponentFactory.get(componentMap[id].name);\n    new cls(host, componentMap[id].props);\n    console.log(host);\n  });\n  Object.keys(componentMap).forEach(id => {\n    const host = template.content.querySelector(`#${  id}`);\n    host.parentNode.insertAdjacentHTML('beforeend', host.innerHTML);\n    host.replaceWith('');\n  });\n\n  return template.content;\n}\n\nexport const clearDomChildren = domElement => {\n  domElement.innerHTML = '';\n  return domElement;\n};\n\nexport const appendDomFragment = (domElement, domFragment) => {\n  if (Array.isArray(domFragment)) {\n    domElement.append(...domFragment);\n  } else {\n    domElement.append(domFragment);\n  }\n  return domElement;\n};\nexport const createDomFragment = string => {\n  const template = document.createElement('template');\n  template.innerHTML = string.trim();\n  return template.content;\n};\n\nexport const buildDomFragment = (host, elements) => {\n  elements.forEach(elementSpec => {\n    const element = document.createElement(typeof elementSpec.tag === 'string' ? elementSpec.tag : 'div');\n    if (elementSpec.innerHTML) {\n      element.innerHTML = elementSpec.innerHTML;\n    }\n    if (elementSpec.classList) {\n      if (typeof elementSpec.classList === 'string') {\n        elementSpec.classList = elementSpec.classList.split(' ');\n      }\n      element.classList.add(...elementSpec.classList);\n    }\n    if (typeof elementSpec.tag !== 'string') {\n      new elementSpec.tag(element, elementSpec.props);\n    }\n    if (elementSpec.children) {\n      buildDomFragment(element, elementSpec.children);\n    }\n    host.appendChild(element);\n  });\n  return host;\n};\n","import {\n  clearDomChildren,\n  appendDomFragment,\n  createDomFragment,\n  buildDomFragment\n} from '../utils/parser';\nimport ComponentFactory from './ComponentFactory';\n\nexport default class Component {\n  constructor(host, props = {}) {\n    this.host = host;\n    this.props = props;\n    this.init();\n    this._render();\n  }\n\n  init() {}\n\n  updateState(stateDelta) {\n    this.state = Object.assign({}, this.state, stateDelta);\n    console.log('state', this.state);\n    this._render();\n  }\n\n  _render() {\n    let rendered = this.render();\n    if (typeof rendered === 'string') {\n      rendered = this._createDomFragment(rendered);\n    }\n    if (Array.isArray(rendered) && rendered[0].tag) {\n      rendered = buildDomFragment(document.createDocumentFragment(), rendered);\n    }\n    appendDomFragment(clearDomChildren(this.host), rendered);\n  }\n\n  _createDomFragment(string) {\n    const template = document.createElement('template');\n    let componentCount = 0;\n    const idBase = new Date().getTime();\n    const componentMap = {};\n\n    const componentRegex = /<[A-Z][A-Za-z].+?\\/>/g; // <Component/>\n    const componentNameRegex = /<([A-Z][A-Za-z]*)/;\n    const paramsRegex = /(\\S+)=[\"']?((?:(?!\\/>|>|\"|'|\\s).)+)/g; // param=value\n\n    string = string.trim().replace(componentRegex, (parsingComponentResults) => {\n      const id = `z${  idBase  }${componentCount++}`;\n      const name = componentNameRegex.exec(parsingComponentResults)[1];\n      const props = {};\n      let parsingParamsResults;\n      while ((parsingParamsResults = paramsRegex.exec(parsingComponentResults)) !== null) {\n        const [, propsName, propsValue] = parsingParamsResults;\n        const objectPropertyName = propsValue.match(/{(.*)}/);\n        props[propsName] =\n          objectPropertyName ?\n          this[objectPropertyName[1].split('.').filter(segment => segment !== 'this').join('.')] :\n          propsValue;\n      }\n      componentMap[id] = {\n        name,\n        props,\n      };\n      return `<div id=\"${id}\"></div>`;\n    });\n    template.innerHTML = string;\n\n    // manage event handlers\n    const eventTag = [];\n    const eventTypes = ['clicletkas', 'form', 'submit'];\n    const elementsWithListeners = template.content.querySelectorAll([eventTypes].map(eventType => `on-${  eventType}`));\n    elementsWithListeners.forEach(element => {\n      eventTypes.forEach(eventType => {\n        if (element.hasAttribute(`on-${  eventType}`)) {\n          let handlerName = element.getAttribute(`on-${  eventType}`).match(/{(.*)}/)[1];\n          handlerName = handlerName.split('.').filter(segment => segment !== 'this').join('.');\n          if (this[handlerName]) {\n            console.log('element', element, eventType, handlerName);\n            element.addEventListener(eventType, this[handlerName].bind(this));\n          }\n        }\n      });\n    });\n    // render mapped components\n    Object.keys(componentMap).forEach(id => {\n      const host = template.content.querySelector(`#${  id}`);\n      const cls = ComponentFactory.get(componentMap[id].name);\n      new cls(host, componentMap[id].props);\n    });\n\n    return template.content;\n  }\n}\n","class WeatherDataService {\n  constructor() {\n    this.geocoderBase = 'https://api.opencagedata.com/geocode/v1/json?q='\n    this.forecastBase = 'https://api.darksky.net/forecast/';\n    this.currentLocationBase = 'https://ipapi.co/json';\n    this.geocoderKey = '&key=39b7025dc04d4a47a61c8866819b5161';\n    this.forecastKey = 'f5bcd9de3734de86a2d47a58d91793ab/';\n    this.corsAnywhere = 'https://cors-anywhere.herokuapp.com/'\n    this.forecastData = {\n      city: '',\n      latitude: '',\n      longitude: '',\n    };\n    this.subscribers = [];\n  }\n\n  setCity(city = 'Kiev') {\n    this.forecastData.city = city;\n    this.getForwardGeocoding();\n  }\n\n  getCurrentLocation() {\n    this.getData(this.currentLocationBase)\n      .then(response => this.getWeatherForecast(response.latitude, response.longitude));\n  }\n\n  getForwardGeocoding() {\n    return this.getData(`${this.geocoderBase}${this.forecastData.city}${this.geocoderKey}`)\n      .then(response => response.results[0].geometry)\n      .then(response => this.getWeatherForecast(response.lat, response.lng));\n  }\n\n  getWeatherForecast(lat, lng) {\n    return this.getData(`${this.corsAnywhere}${this.forecastBase}${this.forecastKey}${lat},${lng}?units=ca`)\n      .then(response => {\n        this.forecastData = Object.assign({}, this.forecastData, response);\n        this.subscribers.forEach(subscriber => subscriber(this.forecastData));\n      })\n  };\n\n  subscribeForCurrentWeather(subscriber) {\n    this.subscribers.push(subscriber)\n  }\n\n  getData(api) {\n    return fetch(`${api}`).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n      return response.json();\n    });\n  }\n}\n\nexport default new WeatherDataService();\n","class AppState {\n  constructor() {\n    this.watchers = {\n      // 'ENTITY': [ watcher1, watcher2 ],\n    };\n  }\n\n  watch(entity, watcher) {\n    if (this.watchers[entity]) {\n      this.watchers[entity].push(watcher);\n    } else {\n      this.watchers[entity] = [watcher];\n    }\n  }\n\n  update(entity, newValue) {\n    this.watchers[entity] && this.watchers[entity].forEach(watcher => watcher(newValue));\n  }\n}\n\nexport default new AppState();\n","import Component from '../../framework/Component';\nimport ComponentFactory from '../../framework/ComponentFactory';\nimport WeatherDataService from '../../Services/WeatherDataService';\nimport AppState from '../../Services/AppState';\n\n\nexport default class SearchBar extends Component {\n  constructor(host, props) {\n    super(host, props);\n    AppState.watch('CITY', this.updateMyself);\n    // window.addEventListener('submit', this.onSubmit.bind(this));\n  }\n\n  init() {\n    this.state = {};\n  }\n\n  updateMyself(subState) {\n    this.updateState(subState);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    if (city) {\n      e.target.elements.city.value = '';\n      WeatherDataService.setCity(city);\n    }\n  }\n\n  render() {\n    return ` <form on-Submit={this.onSubmit}>\n               <input class=\"search__input \" name=\"city\" placeholder=\"city\" type=\"text\" value=\"\" />\n               <button class=\"search__button\" type=\"submit\"/>search</button>\n             </form>`\n  }\n}\n\n//\n\nComponentFactory.register(SearchBar); // to register component class with factory\n","export {\n  default as SearchBar\n}\nfrom './SearchBar';\n","import fog from '../../icons/wi-fog.svg';\nimport rain from '../../icons/wi-rain.svg';\nimport snow from '../../icons/wi-snow.svg';\nimport wind from '../../icons/wi-strong-wind.svg';\nimport sleet from '../../icons/wi-sleet.svg';\nimport cloudy from '../../icons/wi-cloud.svg';\nimport clearDay from '../../icons/wi-day-sunny.svg';\nimport clearNight from '../../icons/wi-night-clear.svg';\nimport partlyCloudyDay from '../../icons/wi-day-cloudy.svg';\nimport partlyCloudyNight from '../../icons/wi-night-alt-cloudy.svg';\n\nimport animatedFog from '../../icons/animated-fog.svg';\nimport animatedRain from '../../icons/animated-rain.svg';\nimport animatedSnow from '../../icons/animated-snow.svg';\nimport animatedWind from '../../icons/animated-wind.svg';\nimport animatedSleet from '../../icons/animated-sleet.svg';\nimport animatedCloudy from '../../icons/animated-cloudy.svg';\nimport animatedClearDay from '../../icons/animated-sunny.svg';\nimport animatedClearNight from '../../icons/animated-clear-night.svg';\nimport animatedPartlyCloudyDay from '../../icons/animated-partly-cloudy-day.svg';\nimport animatedPartlyCloudyNight from '../../icons/animated-partly-cloudy-night.svg';\n\n\nexport const imageUrl = {\n  'fog': fog,\n  'rain': rain,\n  'snow': snow,\n  'wind': wind,\n  'sleet': sleet,\n  'cloudy': cloudy,\n  'clear-day': clearDay,\n  'clear-night': clearNight,\n  'partly-cloudy-day': partlyCloudyDay,\n  'partly-cloudy-night': partlyCloudyNight,\n};\n\nexport const animatedImageUrl = {\n  'fog': animatedFog,\n  'rain': animatedRain,\n  'snow': animatedSnow,\n  'wind': animatedWind,\n  'sleet': animatedSleet,\n  'cloudy': animatedCloudy,\n  'clear-day': animatedClearDay,\n  'clear-night': animatedClearNight,\n  'partly-cloudy-day': animatedPartlyCloudyDay,\n  'partly-cloudy-night': animatedPartlyCloudyNight,\n};\n","import Component from '../../framework/Component';\nimport AppState from '../../Services/AppState';\nimport ComponentFactory from '../../framework/ComponentFactory';\nimport WeatherDataService from '../../Services/WeatherDataService';\nimport {\n  animatedImageUrl\n} from '../../utils/icons';\n\n\nexport default class CurrentWeather extends Component {\n  constructor(host, props) {\n    super(host, props);\n    this.onServerResponse = this.onServerResponse.bind(this);\n    WeatherDataService.subscribeForCurrentWeather(this.onServerResponse);\n  }\n\n  init() {\n    this.state = {\n      temperature: '',\n      icon: '',\n      windSpeed: '',\n      humidity: '',\n      date: '',\n      city: '',\n    };\n    if (this.state.city === '') {\n      WeatherDataService.getCurrentLocation();\n    }\n  }\n\n\n  onServerResponse(weatherData) {\n    const {\n      currently,\n      city\n    } = weatherData;\n    const {\n      units\n    } = weatherData.flags;\n    if (currently) {\n      currently.date = new Date(currently.time * 1000)\n        .toLocaleDateString('en-US', {\n          month: 'long',\n          day: 'numeric'\n        });\n      currently.temperature = Math.round(currently.temperature);\n      currently.city = city;\n      currently.units = units;\n      this.updateState(currently);\n    }\n  }\n\n  render() {\n    return `\n  <div class=\"temp\">\n  ${this.state.temperature}\n  ${(this.state.units='ca')?'<span>C |<a>F</a></span>':'<span>C|<a>F</a></span>'}\n  </div>\n  <div class=\"right\">\n    <div class=\"date\">${this.state.date}</div>\n    <div class=\"summary\">${this.state.city}</div>\n    <div class=\"date\">${this.state.humidity}</div>\n    <div class=\"date\">${this.state.windSpeed}</div>\n  </div>\n  <div class=\"weather-icon\">\n  <img src=\"${animatedImageUrl[this.state.icon]}\" />\n  </div>`\n  }\n}\nComponentFactory.register(CurrentWeather);\n","export {\n  default as CurrentWeather\n}\nfrom './CurrentWeather';\n","import Component from '../../framework/Component';\nimport AppState from '../../Services/AppState';\nimport ComponentFactory from '../../framework/ComponentFactory';\nimport WeatherDataService from '../../Services/WeatherDataService';\nimport imageUrl from '../../utils/icons';\n\n\nexport default class WeatherForecast extends Component {\n  constructor(host, props) {\n    super(host, props);\n    this.onServerResponse = this.onServerResponse.bind(this);\n    WeatherDataService.subscribeForCurrentWeather(this.onServerResponse);\n  }\n\n  init() {\n    this.state = {\n      data: [{\n        temperatureHigh: '',\n        temperatureLow: '',\n        icon: '',\n      }, ]\n    }\n  }\n\n  onServerResponse({\n    daily\n  }) {\n    daily.data = daily.data.slice(1, 6);\n    daily.data.map(day => {\n      day.weekday = new Date(day.time * 1000)\n        .toLocaleDateString('en-US', {\n          weekday: 'short',\n        });\n      day.temperatureHigh = Math.round(day.temperatureHigh);\n      day.temperatureLow = Math.round(day.temperatureLow);\n    });\n    this.updateState(daily);\n  }\n\n  render() {\n    return this.state.data\n      .map(day => `\n      <WeatherForecastItem weekday=${day.weekday} icon=${day.icon} temperatureHigh=${day.temperatureHigh} temperatureLow=${day.temperatureLow}/>`)\n      .join(' ');\n  }\n}\nComponentFactory.register(WeatherForecast);\n","export {\n  default as WeatherForecast\n}\nfrom './WeatherForecast';\n","import Component from '../../framework/Component';\nimport ComponentFactory from '../../framework/ComponentFactory';\nimport {\n  animatedImageUrl\n} from '../../utils/icons';\n\nexport default class WeatherForecastItem extends Component {\n  constructor(host, props) {\n    super(host, props);\n  }\n\n  render() {\n    return `\n    <h4>${this.props.weekday}</h4>\n    <img src=\"${animatedImageUrl[this.props.icon]}\" />\n    <p>${this.props.temperatureHigh}</p>\n    <p>${this.props.temperatureLow}</p>\n  `\n  }\n}\nComponentFactory.register(WeatherForecastItem);\n","export {\n  default as WeatherForecastItem\n}\nfrom './WeatherForecastItem';\n","import Component from '../../framework/Component';\nimport ComponentFactory from '../../framework/ComponentFactory';\nimport {\n  SearchBar\n} from '../SearchBar';\nimport {\n  CurrentWeather\n} from '../CurrentWeather';\nimport {\n  WeatherForecast\n} from '../WeatherForecast';\nimport {\n  WeatherForecastItem\n} from '../WeatherForecastItem';\n\n\nexport default class App extends Component {\n  constructor(host) {\n    super(host);\n  }\n\n  init() {\n    this.updateState = this.updateState.bind(this);\n    this.state = {\n      inputValue: '',\n      hasError: false,\n      todayForecast: null,\n      weekForecast: null,\n    };\n  }\n\n  getWeattherFromGeolocation() {\n    if (!this.state.todayForecast) {\n      WeatherDataService.getGeolocation().then(city =>\n        this.getCityForecast(city),\n      );\n      console.log('geo.loc', city);\n    }\n  }\n\n  render() {\n    return `\n    <nav class=\"search__container\">\n      <SearchBar/>\n    </nav>\n    <div id=\"card\" class=\"weather\">\n      <div class=\"details\">\n        <CurrentWeather/>\n        <div class=\"forcast\">\n          <WeatherForecast/>\n        </div>\n      </div>\n    </div>\n    `;\n  }\n}\n// to register component class with factory\n","export {default as App} from \"./App\";\n","import '../style.scss';\n// import {routes} from './routes/routes';\n// import Router from './framework/Router'\nimport {App} from './Components/App';\n\nnew App(document.getElementById('app'))\n// , routes, App)\n// router.init();\n"]}